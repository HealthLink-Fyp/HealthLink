.card-container {
    display: flex;
    flex-wrap: wrap;
    justify-content:  center; /* Center align the cards */
     
  }

  .card-content {
    overflow: hidden; /* Hide content that overflows the card */
  }
  
  .card {
    flex: 1 1 auto; /* Let the card grow and shrink to fit available space */
    margin: 10px; /* Add some space between cards */
    max-width: 250px; /* sets a maximum width for the cards to prevent them from expanding too much on 
                          larger screens. */
    max-height: 100%; /* sets a maximum height for the cards */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.2);
      transition: transform 0.3s ease; /* Add transition for smooth effect */

      
  }
  
  .card:hover {
    transform: scale(1.05); /* Scale the card slightly larger on hover */
}
  
  /* The item is allowed to grow (flex-grow: 1) and shrink (flex-shrink: 1) equally relative
   to other items.
   Its initial size is determined by its content (flex-basis: auto), 
   meaning the browser will calculate its size based on the content it contains. */

   .card-image-container {
    max-width: 100%; /* Set the maximum width of the image container to 100% of its parent container */
    max-height: 70%; /* Set the maximum height of the image container */
    overflow: hidden; /* Hide any overflowing content */
    background-color: #AFCFED;
    border-radius: 10px;
  }

   .mat-card-image
   {
    width: 100%; /* Make the image width fill its container */
    height: auto; /* Allow the height to adjust automatically based on the width to maintain aspect ratio */
    object-fit: cover; /* Maintain aspect ratio while covering the container */
  }
   

  .example-header-image {
    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');
    background-size: cover;
  }
  
  .mat-mdc-card 
  {
   
    background-color: #f0f0f0;
    border-radius: 10px; /* Adjust this value to change the roundness */
    overflow: hidden; /* Hide any overflowing content */
    object-fit: cover; /* Maintain aspect ratio while covering the container */
  }


/* animations */

/* for cards */

  .slide-in-blurred-left{-webkit-animation:slide-in-blurred-left 1s cubic-bezier(.23,1.000,.32,1.000) both;animation:slide-in-blurred-left 1s cubic-bezier(.23,1.000,.32,1.000) both}

  /* ----------------------------------------------
 * Generated by Animista on 2024-4-2 15:36:3
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

@-webkit-keyframes slide-in-blurred-left{0%{-webkit-transform:translateX(-1000px) scaleX(2.5) scaleY(.2);transform:translateX(-1000px) scaleX(2.5) scaleY(.2);-webkit-transform-origin:100% 50%;transform-origin:100% 50%;-webkit-filter:blur(40px);filter:blur(40px);opacity:0}100%{-webkit-transform:translateX(0) scaleY(1) scaleX(1);transform:translateX(0) scaleY(1) scaleX(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;-webkit-filter:blur(0);filter:blur(0);opacity:1}}@keyframes slide-in-blurred-left{0%{-webkit-transform:translateX(-1000px) scaleX(2.5) scaleY(.2);transform:translateX(-1000px) scaleX(2.5) scaleY(.2);-webkit-transform-origin:100% 50%;transform-origin:100% 50%;-webkit-filter:blur(40px);filter:blur(40px);opacity:0}100%{-webkit-transform:translateX(0) scaleY(1) scaleX(1);transform:translateX(0) scaleY(1) scaleX(1);-webkit-transform-origin:50% 50%;transform-origin:50% 50%;-webkit-filter:blur(0);filter:blur(0);opacity:1}}


@media(max-width:720px)
{
  .card-container {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content:  center; /* Center align the cards */
     
  }

}