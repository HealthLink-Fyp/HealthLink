{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> HealthLink is a cutting-edge web application designed to bridge the communication gap between patients and doctors. </p> <p>Documentation: https://healthlink-fyp.github.io/HealthLink</p> <p>Source Code: https://github.com/HealthLink-Fyp/HealthLink</p> <p>HealthLink is built using the following technologies:</p> <ul> <li>Frontend: Angular, TypeScript, RxJS, Angular Material</li> <li>Backend: Django, Django REST framework, PostgreSQL, Redis, Celery</li> <li>Machine Learning: OpenAI LLM, TensorFlow, LangChain</li> <li>Deployment: Docker, AWS, GitHub Actions</li> <li>API Documentation: MKDocs, Material for MkDocs</li> </ul> <p>* still in development</p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p>Patient Dashboard: Patients can view their medical history, prescriptions, and appointments.</p> </li> <li> <p>Doctor Dashboard: Doctors can view their patients' medical history, prescribe medications, and schedule appointments.</p> </li> <li> <p>Chatbot: Patients can ask questions to the chatbot, which uses OpenAI's LLM to generate responses.</p> </li> <li> <p>Appointment Scheduling: Patients can schedule appointments with doctors.</p> </li> <li> <p>Prescription Generation: Doctors can generate prescriptions for patients.</p> </li> <li> <p>Medical History: Patients can view their medical history.</p> </li> <li> <p>Notifications: Patients and doctors receive notifications for appointments and prescriptions.</p> </li> <li> <p>Admin Panel: Admins can manage users, doctors, and patients.</p> </li> <li> <p>Machine Learning: The chatbot uses OpenAI's LLM to generate responses.</p> </li> <li> <p>Security: HealthLink uses JWT tokens for authentication and authorization.</p> </li> <li> <p>Deployment: HealthLink is deployed on AWS using Docker containers.</p> </li> <li> <p>CI/CD: HealthLink uses GitHub Actions for continuous integration and deployment.</p> </li> <li> <p>API Documentation: HealthLink's API is documented using MKDocs.</p> </li> <li> <p>Responsive Design: HealthLink is designed to work on all devices.</p> </li> <li> <p>Search: Patients can search for doctors and appointments.</p> </li> <li> <p>Feedback: Patients can provide feedback on doctors.</p> </li> <li> <p>Rating: Patients can rate doctors.</p> </li> <li> <p>Email Notifications: Patients and doctors receive email notifications for appointments and prescriptions.</p> </li> <li> <p>Video Consultation: Patients can have video consultations with doctors.</p> </li> <li> <p>Voice Consultation: Patients can have voice consultations with doctors.</p> </li> <li> <p>Payment Integration: Patients can pay for appointments and prescriptions.</p> </li> <li> <p>Telemedicine: Patients can consult with doctors remotely.</p> </li> <li> <p>E-Prescription: Doctors can generate e-prescriptions for patients.</p> </li> </ul>"},{"location":"api/authentication/","title":"HealthLink Authentication API Documentation","text":"<p>This documentation outlines the usage of the Django API provided for user authentication and management.</p>"},{"location":"api/authentication/#endpoints","title":"Endpoints","text":""},{"location":"api/authentication/#1-register-user","title":"1. Register User","text":"<ul> <li>URL: <code>/api/v1/auth/register/</code></li> <li>Method: <code>POST</code></li> <li> <p>Description: Register a new user.</p> </li> <li> <p>Request Body:</p> <p><code>email</code> (string, required): Email of the user.</p> <p><code>password</code> (string, required): Password of the user.</p> <p><code>role</code> (string, optional): Role of the user (Note: Only non-admin roles are allowed.)</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: User registered successfully.</p> <p><code>400 Bad Request</code>: Invalid request parameters.</p> <p><code>403 Forbidden</code>: Not allowed (for admin role).</p> </li> </ul>"},{"location":"api/authentication/#2-user-login","title":"2. User Login","text":"<ul> <li>URL: <code>/api/v1/auth/login/</code></li> <li>Method: <code>POST</code></li> <li>Description: Log in an existing user.</li> <li> <p>Request Body:</p> <p><code>email</code> (string, required): Email of the user.</p> <p><code>password</code> (string, required): Password of the user.</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: User logged in successfully.</p> <p><code>400 Bad Request</code>: Invalid request parameters.</p> <p><code>401 Unauthorized</code>: Invalid credentials or authentication failed.</p> <p><code>404 Not Found</code>: User not found.</p> <p><code>403 Forbidden</code>: Not allowed (for admin role).</p> </li> </ul>"},{"location":"api/authentication/#3-user-information","title":"3. User Information","text":"<ul> <li>URL: <code>/api/v1/auth/user/</code></li> <li>Method: <code>GET</code></li> <li>Description: Retrieve information about the logged-in user.</li> <li>Authentication: JWT token required.</li> <li> <p>Responses:</p> <p><code>200 OK</code>: User information retrieved successfully.</p> <p><code>401 Unauthorized</code>: Not authenticated.</p> </li> </ul>"},{"location":"api/authentication/#4-refresh-access-token","title":"4. Refresh Access Token","text":"<ul> <li>URL: <code>/api/v1/auth/refresh/</code></li> <li>Method: <code>POST</code></li> <li>Description: Refresh the access token using the refresh token.</li> <li> <p>Request Header:</p> <p><code>Cookie</code>: <code>refresh_token</code> (string, required): Refresh token.</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: Access token refreshed successfully.</p> <p><code>400 Bad Request</code>: Invalid refresh token.</p> <p><code>401 Unauthorized</code>: Not authenticated.</p> <p><code>404 Not Found</code>: User not found.</p> </li> </ul>"},{"location":"api/authentication/#5-user-logout","title":"5. User Logout","text":"<ul> <li>URL: <code>/api/v1/auth/logout/</code></li> <li>Method: <code>POST</code></li> <li>Description: Log out the user by deleting the refresh token.</li> <li> <p>Request Header:</p> <p><code>Cookie</code>: <code>refresh_token</code> (string, required): Refresh token.</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: User logged out successfully.</p> <p><code>401 Unauthorized</code>: Not authenticated.</p> </li> </ul>"},{"location":"api/authentication/#6-forgot-password","title":"6. Forgot Password","text":"<ul> <li>URL: <code>/api/v1/auth/forgot/</code></li> <li>Method: <code>POST</code></li> <li>Description: Send an email to the user to reset their password.</li> <li> <p>Request Body:</p> <p><code>email</code> (string, required): Email of the user.</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: Email sent successfully with reset instructions.</p> <p><code>404 Not Found</code>: User not found.</p> </li> </ul>"},{"location":"api/authentication/#7-reset-password","title":"7. Reset Password","text":"<ul> <li>URL: <code>/api/v1/auth/reset/</code></li> <li>Method: <code>POST</code></li> <li>Description: Reset the user's password using the reset token.</li> <li> <p>Request Body:</p> <p><code>token</code> (string, required): Reset token received via email.</p> <p><code>password</code> (string, required): New password for the user.</p> </li> <li> <p>Responses:</p> <p><code>200 OK</code>: Password reset successfully.</p> <p><code>400 Bad Request</code>: Invalid request parameters.</p> <p><code>404 Not Found</code>: Invalid token or user not found.</p> </li> </ul>"},{"location":"api/profile/","title":"HealthLink Profile API Documentation","text":"<p>This documentation outlines the usage of the Django API provided for user profiles.</p>"},{"location":"api/profile/#endpoints","title":"Endpoints","text":""},{"location":"api/profile/#1-user-profile-information-doctor-or-patient","title":"1. User Profile Information (Doctor or Patient)","text":"<ul> <li>URL: <code>api/v1/auth/profile/</code></li> <li>Method: <code>GET</code></li> <li>Description: Retrieve the user's profile.</li> <li>Authentication: <code>JWT token required</code>.</li> <li>Permissions: User must be authenticated.</li> <li> <p>Responses:</p> <p><code>200 OK</code>: Profile retrieved successfully.</p> <p><code>404 Not Found</code>: User or profile not found.</p> <p><code>403 Forbidden</code>: Not allowed.</p> </li> </ul>"},{"location":"api/profile/#2-create-user-profile-doctor-or-patient","title":"2. Create User Profile (Doctor or Patient)","text":"<ul> <li>Method: <code>POST</code></li> <li>Description: Create the user's profile.</li> <li>Authentication: <code>JWT token required</code>.</li> <li>Permissions: User must be authenticated.</li> <li> <p>Request Body:</p> <p><code>user</code> (integer, required): ID of the user.</p> </li> <li> <p>Profile data (varies based on user role):</p> <ul> <li>For doctors: See Doctor Profile Serializer</li> <li>For patients: See Patient Profile Serializer</li> </ul> </li> <li> <p>Responses:</p> <p><code>201 Created</code>: Profile created successfully.</p> <p><code>400 Bad Request</code>: Invalid request parameters.</p> <p><code>403 Forbidden</code>: Not allowed.</p> </li> </ul>"},{"location":"api/profile/#serializers","title":"Serializers","text":""},{"location":"api/profile/#doctor-profile-serializer","title":"Doctor Profile Serializer","text":"<p>Serializer for doctor profile data.</p> <pre><code>{\n  \"id\": integer,\n  \"user\": integer,\n  \"full_name\": string,\n  \"city\": string,\n  \"specialization\": string,\n  \"qualification\": string,\n  \"experience_years\": integer,\n  \"consultation_fees\": integer,\n  \"summary\": string,\n  \"wait_time\": integer,\n  \"recommendation_percent\": integer,\n  \"patients_count\": integer,\n  \"reviews_count\": integer,\n  \"profile_photo_url\": string,\n  \"created\": datetime\n}\n</code></pre>"},{"location":"api/profile/#patient-profile-serializer","title":"Patient Profile Serializer","text":"<p>Serializer for patient profile data.</p> <pre><code>{\n  \"id\": integer,\n  \"user\": integer,\n  \"full_name\": string,\n  \"city\": string,\n  \"age\": integer,\n  \"sex\": boolean,\n  \"blood_group\": string,\n  \"weight\": integer,\n  \"height\": integer,\n  \"bmi\": float,\n  \"created\": datetime\n}\n</code></pre>"}]}