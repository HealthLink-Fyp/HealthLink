# Generated by Django 5.0.6 on 2024-06-13 15:24

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("username", models.CharField(max_length=255)),
                ("phone_number", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("admin", "Admin"),
                            ("doctor", "Doctor"),
                            ("patient", "Patient"),
                        ],
                        default="patient",
                        max_length=255,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="doctor",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("sex", models.BooleanField(blank=True, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "specialization",
                    models.CharField(
                        choices=[
                            ("general_practice", "General Practice"),
                            ("child_care", "Child Care"),
                            ("women_health", "Women Health"),
                            ("bone_joint_care", "Bone & Joint Care"),
                            ("heart_care", "Heart Care"),
                            ("skin_care", "Skin Care"),
                            ("eye_care", "Eye Care"),
                            ("dental_care", "Dental Care"),
                            ("mental_health", "Mental Health"),
                            (
                                "brain_nervous_system_care",
                                "Brain & Nervous System Care",
                            ),
                            ("digestive_health", "Digestive Health"),
                            ("urinary_tract_health", "Urinary Tract Health"),
                            ("cancer_care", "Cancer Care"),
                            ("ear_nose_throat_care", "Ear, Nose & Throat Care"),
                            ("hormone_health", "Hormone Health"),
                            ("joint_health", "Joint Health"),
                            (
                                "allergy_immune_system_care",
                                "Allergy & Immune System Care",
                            ),
                            ("lung_respiratory_health", "Lung & Respiratory Health"),
                            ("kidney_health", "Kidney Health"),
                            ("physical_therapy", "Physical Therapy"),
                        ],
                        db_index=True,
                        max_length=255,
                    ),
                ),
                (
                    "qualification",
                    models.CharField(
                        choices=[("mbbs", "MBBS"), ("bds", "BDS"), ("md", "MD")],
                        db_index=True,
                        max_length=255,
                    ),
                ),
                ("experience_years", models.IntegerField()),
                ("consultation_fees", models.IntegerField()),
                ("summary", models.TextField(max_length=255)),
                ("wait_time", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "recommendation_percent",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "patients_count",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "reviews_count",
                    models.IntegerField(blank=True, default=0, null=True),
                ),
                (
                    "profile_photo_url",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_photos"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="PatientProfile",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="patient",
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("age", models.IntegerField()),
                ("sex", models.BooleanField(blank=True, null=True)),
                ("blood_group", models.CharField(max_length=255)),
                ("weight", models.IntegerField(default=1)),
                ("height", models.IntegerField(default=1)),
                ("bmi", models.FloatField(blank=True, default=0, null=True)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name="UserForgot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=255)),
                (
                    "token",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token", models.CharField(max_length=255, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expire_at", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=10,
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availability_set",
                        to="core.doctorprofile",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Availabilities",
                "unique_together": {("doctor", "day")},
            },
        ),
    ]
